This file is intended to be a running list of open and resolved issues for CellBlender.

Some of this functionality is in the various "issue trackers" that come with a particular
repository host (Google Code, GitHub, GitLab), but those "issue trackers" may be specific
to each platform and are not part of what's downloaded when a repository is cloned.

=== Open Issues ===

 - Add MCellR support to the "MCell Local" Engine/Runner.
     This is partially implemented, and being tested.
     Should we default to hiding the "mol_surface_proxy" and "mol_volume_proxy" molecules?
     Sometimes a model needs to be run twice for MCell to run (race condition in files?).

 - Opening a parameter-driven swept geometry blend file doesn't display the right geometry.

 - Check for mcell path in extensions folder and use as the default if not already set
 - Check for bionetgen path in extensions folder and use as the default if not already set

 - Can't use a parameter value for time step with MCellR
      (it may need to be converted to a numeric value for use with export or BNGL suite?)

 - When sweeping (MCellR only?), the task list doesn't update until the last few are run.

 - The plot setting to always generate all files seems to be stuck on (MCellR only?).

 - Adding new release sites sometimes duplicates the default name (Release_Site_2 for example).

 - Testing ... we need lots of test cases to test various combinations of features.
   This is especially important for testing lots of features with MCellR.

=== Resolved Issues ===

 - In the Objects panel: selecting "Display From: Exported Files" doesn't work.
     This option doesn't make sense for static scripted objects.
     The logic was re-worked to produce sensible options for this case.
 - Display engine output (text) to the 3D view during run.
     Completed
 - Move the "start_time.txt" file into the <project>_files directory.
     start_time.txt is now in the <project>_files directory.
 - Doesn't seem to support sweeping ...
     Completed
 - Can't seem to add plain (non-BNGL) molecules to an MCellR simulation.
     This was an "operator error". Released molecules use a syntax like: @CP::x()
     They work fine without any components, but do need to be referenced properly.
 

